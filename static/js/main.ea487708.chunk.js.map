{"version":3,"sources":["common/constants.ts","components/you_tube_url_converter/index.tsx","components/make_text_searchable/index.tsx","service-worker.ts","screens/home_page/index.tsx","screens/rgb_to_hex/events.ts","screens/rgb_to_hex/index.tsx","screens/render_markdown/index.tsx","screens/counter/index.tsx","screens/Percentage/index.tsx","components/github_svg.tsx","components/header/index.tsx","router/index.tsx","index.tsx"],"names":["AppRoute","LocalStorageKey","inputCopyToClip","React","createRef","state","displayCopyButton","message","youtubeEmbeddedUrl","youtubeWebUrl","copyToClipInProgress","onKeyUpEmbeddedToWebUrl","result","RegExp","exec","length","videoId","newUrl","setState","copyToClip","input","current","value","select","setSelectionRange","document","execCommand","this","className","htmlFor","type","placeholder","id","size","onChange","e","target","onClick","hidden","ref","Component","RenderMarkdown","textToCleanRef","textToClean","makeItSearchable","textToCopy","replace","trim","textAreaElement","createElement","body","appendChild","removeChild","focus","ev","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","forceUpdateServiceWorker","ready","Promise","resolve","_","unregister","reload","forceUpdateLastClickTime","Date","getTime","title","confirm","to","rgbToHex","rgb","hexValue","getElementById","setHexa","rgbaSplit","split","indexOf","r","g","b","a","toHexa","alphaValue","alphaInFloat","parseFloat","undefined","isNaN","Math","round","convertToHex","toAlpha","deciVal","deciInINT","parseInt","deci","inHex","toString","toUpperCase","hexStr","innerHTML","setAttribute","hexToRGB","hexa","rgbValue","setRGB","substr","toDeci","toFixed","hexVal","rgbStr","RgbToHex","bind","markdown","whileDrag","onDropEvent","evt","preventDefault","reader","FileReader","addEventListener","file","readAsText","dataTransfer","files","onDragEvent","onDragLeave","onDragOver","onDragEnter","onDrop","ArrowKeyNames","swipeAbleHeigh","counterTextElement","swipeRequiredDistance","counter","makeCounterTextUnSelectable","element","style","setProperty","onBeforeUnload","saveCurrentCounter","localStorage","setItem","saveCurrentCounterIfDivisibleBy10","onKeyUpListener","keyName","key","incrementCounter","decrementCounter","onDecrement","eventData","abs","deltaX","deltaY","onIncrement","onResetCounter","innerHeight","Number","getItem","removeEventListener","height","onSwipedUp","onSwipedRight","onSwipedDown","onSwipedLeft","Percentage","dollarRate","price","bankFeePercent","resultNormal","resultNormalFeePercent","resultNormalAfterAddingBankFee","actualPriceCut","calculateNormalResult","bankFeePercentInt","resultNorm","width","aria-hidden","fill","viewBox","version","fillRule","d","href","exact","path","from","ReactDOM","render","URL","process","origin","fetch","headers","response","contentType","get","status","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.ea487708.chunk.js","sourcesContent":["export const AppRoute = {\r\n  HomePage: '/',\r\n  RgbToHex: '/rgb_to_hex',\r\n  RenderMarkdown: '/render_markdown',\r\n  Counter: '/counter',\r\n  Percentage: '/percentage',\r\n};\r\n\r\nexport const LocalStorageKey = {\r\n  COUNTER: \"COUNTER\"\r\n};","import React from 'react';\r\n\r\nexport default class extends React.Component {\r\n  inputCopyToClip = React.createRef<HTMLInputElement>();\r\n\r\n  state = {\r\n    displayCopyButton: false,\r\n    message: '',\r\n    youtubeEmbeddedUrl: '',\r\n    youtubeWebUrl: '',\r\n    copyToClipInProgress: false,\r\n  };\r\n\r\n  onKeyUpEmbeddedToWebUrl = () => {\r\n    const { youtubeEmbeddedUrl } = this.state;\r\n\r\n    // owner of regular expression -> https://stackoverflow.com/a/9836367/8075004\r\n    const result = new RegExp(/^.*(youtu.be\\/|v\\/|u\\/\\w\\/|embed\\/|watch\\?v=|&v=)([^#&?]{0,11}).*/g).exec(youtubeEmbeddedUrl);\r\n\r\n    if (result && result.length > 2) {\r\n      const videoId = result[2];\r\n      const newUrl = `https://www.youtube.com/watch?v=${videoId}`;\r\n      this.setState({ message: newUrl, youtubeWebUrl: newUrl, displayCopyButton: true });\r\n      return;\r\n    }\r\n\r\n    this.setState({ message: 'Invalid youtube url', displayCopyButton: false });\r\n\r\n    // OR\r\n    // try {\r\n    //   const url = new URL(inputElement.value);\r\n    //   let videoId;\r\n    //   if (url.search) {\r\n    //     const urlSearchParams = new URLSearchParams(url.search);\r\n    //     videoId = urlSearchParams.get('v');\r\n    //   } else {\r\n    //     videoId = url.pathname.replace('/', '');\r\n    //   }\r\n    //   resultElement.innerHTML = `https://www.youtube.com/watch?v=${videoId}`;\r\n    // } catch {\r\n    //   resultElement.innerHTML = 'Invalid url';\r\n    // }\r\n  }\r\n\r\n  copyToClip = () => {\r\n    // owner of solution: https://www.w3schools.com/howto/howto_js_copy_clipboard.asp\r\n    const input = this.inputCopyToClip.current;\r\n    if (input) {\r\n      input.value = this.state.youtubeWebUrl;\r\n\r\n      this.setState({ copyToClipInProgress: true }, () => {\r\n        input.select();\r\n        input.setSelectionRange(0, 99999); /*For mobile devices*/\r\n        document.execCommand('copy');\r\n        this.setState({ copyToClipInProgress: false });\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { displayCopyButton, message, youtubeEmbeddedUrl } = this.state;\r\n\r\n    return <div className=\"col\">\r\n      <div className=\"row\">\r\n        <div className=\"col\">\r\n          <div className=\"row\">\r\n            <label className=\"col mb-0\" htmlFor=\"youtube_embedded_url\">Convert embedded/shared youtube-url to web-url:</label>\r\n          </div>\r\n\r\n          <div className=\"row\">\r\n            <div className=\"col\">\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"https://youtu.be/eg_link\"\r\n                id='youtube_embedded_url'\r\n                value={youtubeEmbeddedUrl}\r\n                size={25}\r\n                className=\"text-center\"\r\n                onChange={e => this.setState({ youtubeEmbeddedUrl: e.target.value }, this.onKeyUpEmbeddedToWebUrl)}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"row\"><span className=\"col\">{message}</span></div>\r\n\r\n          <div className=\"row\">\r\n            <div className=\"col-1\" />\r\n            <div className=\"col-10\">\r\n              <button onClick={this.copyToClip} className={`btn btn-primary m-0 ${displayCopyButton ? '' : 'invisible'}`}>Copy Web URL</button>\r\n            </div>\r\n            <div className=\"col-1\" />\r\n          </div>\r\n\r\n          <input hidden={!this.state.copyToClipInProgress} ref={this.inputCopyToClip} />\r\n        </div>\r\n      </div>\r\n    </div>;\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\nexport default class RenderMarkdown extends React.Component {\r\n  textToCleanRef = React.createRef<HTMLInputElement>();\r\n  state = {\r\n    textToClean: \"\"\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.textToCleanRef.current?.focus();\r\n  }\r\n\r\n  makeItSearchable = () => {\r\n    const textToCopy = this.state.textToClean.replace(/[^a-zA-Z0-9]+/g, \" \").trim();\r\n\r\n    const textAreaElement = document.createElement(\"textarea\");\r\n\r\n    textAreaElement.value = textToCopy;\r\n\r\n    document.body.appendChild(textAreaElement);\r\n\r\n    textAreaElement.select();\r\n    document.execCommand(\"copy\");\r\n\r\n    document.body.removeChild(textAreaElement);\r\n  };\r\n\r\n  render() {\r\n    return (<div className=\"col\">\r\n\r\n      <div className=\"row\">\r\n        <div className=\"col\">\r\n          <input\r\n            ref={this.textToCleanRef}\r\n            type=\"text\"\r\n            placeholder=\"Paste here the text to clean.\"\r\n            value={this.state.textToClean}\r\n            className=\"text-center\"\r\n            size={25}\r\n            onChange={ev => { this.setState({ textToClean: ev.target.value }); }}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"row\">\r\n        <div className=\"col\">\r\n          <button onClick={this.makeItSearchable} className=\"btn btn-primary btn-sm\">{\"Clean & Copy\"}</button>\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n    );\r\n  }\r\n}","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n  // [::1] is the IPv6 localhost address.\r\n  window.location.hostname === '[::1]' ||\r\n  // 127.0.0.0/8 are considered localhost for IPv4.\r\n  window.location.hostname.match(\r\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n  )\r\n);\r\n\r\nexport function register(config: { onUpdate: (arg0: ServiceWorkerRegistration) => void; onSuccess: (arg0: ServiceWorkerRegistration) => void; }) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config: { onUpdate: (arg0: ServiceWorkerRegistration) => void; onSuccess: (arg0: ServiceWorkerRegistration) => void; }) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration: ServiceWorkerRegistration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config: { onUpdate: ((arg0: ServiceWorkerRegistration) => void) | ((arg0: ServiceWorkerRegistration) => void); onSuccess: ((arg0: ServiceWorkerRegistration) => void) | ((arg0: ServiceWorkerRegistration) => void); }) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n\r\nfunction getServiceWorkerRegistration(): Promise<ServiceWorkerRegistration | null> {\r\n  if ('serviceWorker' in navigator) {\r\n    return navigator.serviceWorker.ready;\r\n  }\r\n  return new Promise<ServiceWorkerRegistration | null>((resolve, _) => {\r\n    resolve();\r\n  });\r\n}\r\n\r\nexport function forceUpdateServiceWorker() {\r\n  getServiceWorkerRegistration().then((registration) => {\r\n    registration?.unregister().then(() => { window.location.reload(); })\r\n  });\r\n};\r\n","import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport { AppRoute } from './../../common/constants';\r\nimport YouTubeUrlConverter from '../../components/you_tube_url_converter';\r\nimport MakeTextSearchable from '../../components/make_text_searchable';\r\nimport { forceUpdateServiceWorker } from '../../service-worker';\r\nimport './app.css';\r\n\r\nexport default () => {\r\n  let forceUpdateLastClickTime = new Date().getTime();\r\n\r\n  function onForceUpdate() {\r\n    if ((new Date().getTime() - forceUpdateLastClickTime) < 300) {\r\n      if (window.confirm(\"Are you sure you want to force refresh?\")) {\r\n        forceUpdateServiceWorker();\r\n      }\r\n    }\r\n    else {\r\n      forceUpdateLastClickTime = new Date().getTime();\r\n    }\r\n  }\r\n\r\n  return <div className=\"container-fluid font-lg text-white text-center bg-dark p-0\">\r\n    <button\r\n      title=\"Double click for force-refresh to update this website with latest features.\"\r\n      className=\"btn btn-sm btn-light mt-1\"\r\n      onClick={onForceUpdate}\r\n    >ForceUpdateSite</button>\r\n\r\n    <div className=\"row p-0 m-0 mt-5\">\r\n      <div className=\"col p-0 m-0\">\r\n\r\n        <ul className='list-unstyled'>\r\n          <li className=\"row m-0\">\r\n            <div className=\"col p-0\">\r\n              <Link className='app_link p-0' to={AppRoute.RgbToHex}>RGB-Hex</Link>\r\n            </div>\r\n          </li>\r\n          <li className=\"row m-0\">\r\n            <div className=\"col p-0\">\r\n              <Link className='app_link p-0' to={AppRoute.RenderMarkdown}>Render Markdown</Link>\r\n            </div>\r\n          </li>\r\n          <li className=\"row m-0\">\r\n            <div className=\"col p-0\">\r\n              <Link className='app_link p-0' to={AppRoute.Counter}>Counter</Link>\r\n            </div>\r\n          </li>\r\n          <li className=\"row m-0\">\r\n            <div className=\"col p-0\">\r\n              <Link className='app_link p-0' to={AppRoute.Percentage}>Percentage</Link>\r\n            </div>\r\n          </li>\r\n          <li className=\"row m-0 mt-3\"><MakeTextSearchable /></li>\r\n          <li className=\"row m-0 mt-3\"><YouTubeUrlConverter /></li>\r\n        </ul>\r\n\r\n      </div>\r\n    </div>\r\n  </div>\r\n};\r\n","\r\nexport function rgbToHex() {\r\n  let rgb = \"\";\r\n  rgb = (document.getElementById(\"rgb\") as HTMLInputElement).value.trim();\r\n  rgb = rgb.replace(/\\s+/g, \" \");\r\n  let hexValue = 'invalid RGB value: ' + rgb;\r\n  // if (!rgb.length || rgb.length < 5 || (rgb.match(/ /g) || []).length !== 2) {\r\n  if (!rgb.length || rgb.length < 5) {\r\n    return setHexa(hexValue);\r\n  }\r\n  const rgbaSplit = rgb.split(rgb.indexOf(',') > -1 ? \",\" : \" \");\r\n\r\n  const r = rgbaSplit[0];\r\n  const g = rgbaSplit[1];\r\n  const b = rgbaSplit[2];\r\n  const a = rgbaSplit.length > 3 ? rgbaSplit[3] : \"1\";\r\n\r\n  hexValue = \"#\";\r\n  hexValue += toHexa(r);\r\n  hexValue += toHexa(g);\r\n  hexValue += toHexa(b);\r\n  hexValue += toAlpha(a);\r\n  setHexa(hexValue);\r\n}\r\n\r\nexport function toHexa(deciVal = \"\") {\r\n  const deciInINT = parseInt(deciVal, 10);\r\n  if (isNaN(deciInINT)) return \"00\";\r\n  return convertToHex(deciInINT);\r\n}\r\n\r\nexport function toAlpha(alphaValue: string) {\r\n  // let alphaInFloat = parseFloat(alphaValue, 10);\r\n  let alphaInFloat = parseFloat(alphaValue);\r\n  if (alphaInFloat === undefined || alphaInFloat === null || isNaN(alphaInFloat) || alphaInFloat > 1 || alphaInFloat < 0) return \"ff\";\r\n  alphaInFloat = Math.round(alphaInFloat * 100) / 100; // for 0.95, two decimal places\r\n  alphaInFloat = Math.round(alphaInFloat * 255);\r\n  return convertToHex(alphaInFloat);\r\n}\r\n\r\nexport function fromHexToAlphaDecimal(hexValue: string) {\r\n  // source: https://stackoverflow.com/a/29101148\r\n  return (parseInt(hexValue, 16) / 255).toFixed(2);\r\n}\r\n\r\nexport function convertToHex(deci: Number) {\r\n  const inHex = deci.toString(16).toUpperCase();\r\n  if (inHex.length === 1) return \"0\" + inHex;\r\n  return inHex;\r\n}\r\n\r\nexport function setHexa(hexStr = \"\") {\r\n  (document.getElementById(\"hexSTR\") as HTMLInputElement).innerHTML = hexStr;\r\n  (document.getElementById(\"rgbBox\") as HTMLInputElement).setAttribute(\"style\", \"background-color: \" + hexStr);\r\n}\r\n\r\nexport function hexToRGB() {\r\n  let hexa = \"\";\r\n  hexa = (document.getElementById(\"hex\") as HTMLInputElement).value.trim();\r\n  hexa = hexa.replace(/ /g, \"\");\r\n  let rgbValue = \"Invalid Hex Value: \" + hexa;\r\n  if (!hexa.length || hexa.length < 6) {\r\n    return setRGB(rgbValue);\r\n  }\r\n  if (hexa.indexOf(\"#\") > -1) {\r\n    hexa = hexa.substr(1);\r\n  }\r\n  const r = hexa.substr(0, 2);\r\n  const g = hexa.substr(2, 2);\r\n  const b = hexa.substr(4, 2);\r\n  let a = hexa.substr(6, 2);\r\n\r\n  if (!a) {\r\n    a = \"ff\";\r\n  }\r\n\r\n  hexa = \"rgba(\";\r\n  hexa += toDeci(r) + \", \";\r\n  hexa += toDeci(g) + \", \";\r\n  hexa += toDeci(b) + \", \";\r\n  hexa += fromHexToAlphaDecimal(a) + \")\";\r\n  setRGB(hexa);\r\n}\r\n\r\nexport function toDeci(hexVal = \"0\") {\r\n  return parseInt(hexVal, 16);\r\n}\r\n\r\nexport function setRGB(rgbStr: string) {\r\n  (document.getElementById(\"rgbSTR\") as HTMLInputElement).innerHTML = rgbStr;\r\n  (document.getElementById(\"hexBox\") as HTMLInputElement).setAttribute(\"style\", \"background-color: \" + rgbStr);\r\n}\r\n\r\n// export function parseInteger(integer) {\r\n//   let parsed = parseInt(integer);\r\n//   return parsed || parsed === 0 ? parsed : 0;\r\n// }\r\n// export function dividedBy(x, y) {\r\n//   let z = x / y;\r\n//   return isNaN(z) ? 0 : z;\r\n// }\r\n","import React from 'react';\r\nimport './style.css';\r\nimport { hexToRGB, rgbToHex } from './events';\r\n\r\nexport default class RgbToHex extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"parent-box\">\r\n          <div id=\"rgbBox\">&nbsp;</div>\r\n          <div className=\"box\">\r\n            <label htmlFor=\"rgb\">\r\n              RGB(&nbsp;\r\n              <input\r\n                type=\"text\"\r\n                id=\"rgb\"\r\n                placeholder=\"255 255 255 | 255, 255, 255\"\r\n                onChange={rgbToHex.bind(this)}\r\n                size={25} />\r\n              &nbsp;)\r\n            </label>\r\n            &nbsp;&nbsp;&nbsp;\r\n        <span id=\"hexSTR\"></span>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"parent-box\">\r\n          <div id=\"hexBox\">&nbsp;</div>\r\n          <div className=\"box\">\r\n            <label htmlFor=\"hex\">#&nbsp;<input type=\"text\" id=\"hex\" placeholder=\"0099ff\" onChange={hexToRGB.bind(this)} /></label>\r\n            &nbsp;&nbsp;&nbsp;\r\n          <span id=\"rgbSTR\"></span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}","import React from 'react';\r\nimport MarkdownView from 'react-showdown';\r\nimport './style.css';\r\n\r\nexport default class RenderMarkdown extends React.Component {\r\n  state = {\r\n    markdown: \"\",\r\n    whileDrag: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    // const dropContainer: Element | null = document.getElementById('dropContainer');\r\n    // dropContainer?.addEventListener(\"dragover\", this.onDragEvent);\r\n    // dropContainer?.addEventListener(\"dragenter\", this.onDragEvent);\r\n    // dropContainer.ondragover = dropContainer.ondragenter = \r\n    // dropContainer.ondrop = \r\n  }\r\n\r\n  onDropEvent = (evt: React.DragEvent<HTMLDivElement>) => {\r\n    // onDropEvent = (evt: { preventDefault: () => void; dataTransfer: { files: Blob[]; }; }) => {\r\n    evt.preventDefault();\r\n    const reader = new FileReader();\r\n\r\n    reader.addEventListener(\"load\", (file: ProgressEvent<FileReader>) => {\r\n      // document.querySelector('#htmlDiv').innerHTML = new Showdown.Converter().makeHtml(file.target.result);\r\n      // document.body.innerHTML = new Showdown.Converter().makeHtml(file?.target?.result);\r\n      const markdown = file?.target?.result;\r\n      this.setState({ markdown });\r\n    });\r\n\r\n    // reader.onload = (file: ProgressEvent<FileReader>) => {\r\n    //   // document.querySelector('#htmlDiv').innerHTML = new Showdown.Converter().makeHtml(file.target.result);\r\n    //   document.body.innerHTML = new Showdown.Converter().makeHtml(file.target.result);\r\n    // }\r\n    reader.readAsText(evt.dataTransfer.files[0]);\r\n  };\r\n\r\n  onDragEvent = (evt: React.DragEvent<HTMLDivElement>) => {\r\n    evt.preventDefault();\r\n    this.setState({ whileDrag: true });\r\n  };\r\n\r\n  onDragLeave = (evt: React.DragEvent<HTMLDivElement>) => {\r\n    evt.preventDefault();\r\n    this.setState({ whileDrag: false });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div id=\"dropContainer\"\r\n          onDragOver={this.onDragEvent}\r\n          onDragEnter={this.onDragEvent}\r\n          onDragLeave={this.onDragLeave}\r\n          onDrop={this.onDropEvent}\r\n          className={this.state.whileDrag ? \"on_drag\" : \"\"}\r\n        >\r\n          <input type=\"file\" />\r\n          <h4>Drop markdown file here</h4>\r\n        </div>\r\n        {/* <div id=\"htmlDiv\"></div> */}\r\n        <MarkdownView markdown={this.state.markdown} />\r\n      </div>\r\n    );\r\n  }\r\n}","import React from 'react';\r\nimport './style.css';\r\nimport { EventData, Swipeable } from 'react-swipeable';\r\nimport { LocalStorageKey } from '../../common/constants';\r\n\r\nconst ArrowKeyNames = {\r\n  ArrowUp: \"ArrowUp\",\r\n  ArrowRight: \"ArrowRight\",\r\n  ArrowDown: \"ArrowDown\",\r\n  ArrowLeft: \"ArrowLeft\",\r\n};\r\n\r\nexport default class RenderMarkdown extends React.Component {\r\n  swipeAbleHeigh: number = 0;\r\n  counterTextElement = React.createRef<HTMLHeadingElement>();\r\n  swipeRequiredDistance = 60;\r\n  state = {\r\n    counter: 0\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.swipeAbleHeigh = window.innerHeight * 0.8;\r\n    this.setState({ counter: Number(localStorage.getItem(LocalStorageKey.COUNTER)) });\r\n    window.addEventListener(\"beforeunload\", this.onBeforeUnload);\r\n    window.addEventListener(\"keyup\", this.onKeyUpListener);\r\n    this.makeCounterTextUnSelectable();\r\n  }\r\n  componentWillUnmount() {\r\n    this.saveCurrentCounter();\r\n    window.removeEventListener(\"beforeunload\", this.onBeforeUnload);\r\n    window.removeEventListener(\"keyup\", this.onKeyUpListener);\r\n  }\r\n\r\n  makeCounterTextUnSelectable = () => {\r\n    const element = this.counterTextElement.current;\r\n    if (element) {\r\n      element.addEventListener('selectstart', () => false);\r\n      element.addEventListener('mousedown', () => false);\r\n      element.style.setProperty('MozUserSelect', 'none');\r\n      element.style.setProperty('userSelect', 'none');\r\n    }\r\n  };\r\n\r\n  onBeforeUnload = () => {\r\n    this.saveCurrentCounter();\r\n  };\r\n\r\n  saveCurrentCounter = () => {\r\n    localStorage.setItem(LocalStorageKey.COUNTER, this.state.counter.toString());\r\n  };\r\n\r\n  saveCurrentCounterIfDivisibleBy10 = () => !(this.state.counter % 10) && this.saveCurrentCounter();\r\n\r\n  onKeyUpListener = (ev: KeyboardEvent) => {\r\n    const keyName = ev.key;\r\n    if (keyName === ArrowKeyNames.ArrowUp || keyName === ArrowKeyNames.ArrowRight) {\r\n      this.incrementCounter();\r\n    }\r\n    else if (keyName === ArrowKeyNames.ArrowLeft || keyName === ArrowKeyNames.ArrowDown) {\r\n      this.decrementCounter();\r\n    }\r\n  };\r\n\r\n  onDecrement = (eventData: EventData) => {\r\n    const [deltaX, deltaY] = [Math.abs(eventData.deltaX), Math.abs(eventData.deltaY)];\r\n    if (deltaX > this.swipeRequiredDistance || deltaY > this.swipeRequiredDistance) {\r\n      this.decrementCounter();\r\n    }\r\n  };\r\n  decrementCounter = () => { this.setState({ counter: this.state.counter - 1 }, this.saveCurrentCounterIfDivisibleBy10); };\r\n\r\n  onIncrement = (eventData: EventData) => {\r\n    const [deltaX, deltaY] = [Math.abs(eventData.deltaX), Math.abs(eventData.deltaY)];\r\n    if (deltaX > this.swipeRequiredDistance || deltaY > this.swipeRequiredDistance) {\r\n      this.incrementCounter();\r\n    }\r\n  };\r\n  incrementCounter = () => { this.setState({ counter: this.state.counter + 1 }, this.saveCurrentCounterIfDivisibleBy10); };\r\n\r\n  onResetCounter = () => {\r\n    if (window.confirm(\"Are you sure you want to reset counter to zero?\")) {\r\n      this.setState({ counter: 0 });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"p-2\">\r\n        <Swipeable\r\n          // style={{ height: document.body.clientHeight * 0.88 }}\r\n          style={{ height: this.swipeAbleHeigh }}\r\n          className=\"bg-swipe-container p-0 m-0 text-center border border-secondary\"\r\n          onSwipedUp={this.onIncrement}\r\n          onSwipedRight={this.onIncrement}\r\n          onSwipedDown={this.onDecrement}\r\n          onSwipedLeft={this.onDecrement}\r\n        >\r\n          <button className=\"btn btn-danger btn-sm mt-2\" onClick={this.onResetCounter}>Reset</button>\r\n          <button className=\"btn btn-primary btn-sm mt-2 ml-2\" onClick={this.saveCurrentCounter}>Save</button>\r\n          <h1 className=\"mt-40 un-selectable-text\">{this.state.counter}</h1>\r\n        </Swipeable>\r\n      </div>\r\n    );\r\n  }\r\n}","import React from 'react';\r\n\r\n\r\n\r\nclass Percentage extends React.Component {\r\n    state = {\r\n        dollarRate: \"0\",\r\n        price: \"0\",\r\n        bankFeePercent: \"5\",\r\n        resultNormal: 0,\r\n        resultNormalFeePercent: 0,\r\n        resultNormalAfterAddingBankFee: 0,\r\n        actualPriceCut: 2123.78,\r\n    };\r\n\r\n    calculateNormalResult = () => {\r\n        const { price, dollarRate, bankFeePercent } = this.state;\r\n        const bankFeePercentInt = parseFloat(bankFeePercent);\r\n        const resultNorm = parseFloat(price) * parseFloat(dollarRate);\r\n\r\n        this.setState({\r\n            resultNormal: resultNorm,\r\n            resultNormalFeePercent: (resultNorm / 100) * bankFeePercentInt,\r\n            resultNormalAfterAddingBankFee: ((resultNorm / 100) * bankFeePercentInt) + resultNorm,\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { price, dollarRate, bankFeePercent, resultNormal, resultNormalFeePercent, resultNormalAfterAddingBankFee, actualPriceCut } = this.state;\r\n        return <div>\r\n            <div>\r\n                Rate:&nbsp;\r\n            <input type=\"text\" placeholder=\"Dollar Rate\" value={dollarRate} onChange={ev => {\r\n                    this.setState({ dollarRate: ev.target.value }, this.calculateNormalResult);\r\n                }} />\r\n            </div>\r\n            <div>\r\n                Price:&nbsp;\r\n            <input type=\"text\" placeholder=\"Price\" value={price} onChange={ev => {\r\n                    this.setState({ price: ev.target.value }, this.calculateNormalResult);\r\n                }} />\r\n            </div>\r\n            <div>\r\n                Bank Fee %:&nbsp;\r\n            <input type=\"text\" placeholder=\"Bank Fee %\" value={bankFeePercent} onChange={ev => {\r\n                    this.setState({ bankFeePercent: ev.target.value }, this.calculateNormalResult);\r\n                }} />\r\n            </div>\r\n            <div>{resultNormal}</div>\r\n            <div>{bankFeePercent}% {resultNormalFeePercent}</div>\r\n            <div>With {bankFeePercent}% {resultNormalAfterAddingBankFee}</div>\r\n            <div>{resultNormal} is {((resultNormal / actualPriceCut) * 100).toFixed(2)}% of {actualPriceCut} {\"-->\"} service fee is {(100 - ((resultNormal / actualPriceCut) * 100)).toFixed(2)}</div>\r\n        </div>;\r\n    }\r\n}\r\n\r\nexport default Percentage;\r\n","import React from 'react';\r\n\r\nexport default () => (<svg height={30} width={32} aria-hidden=\"true\" className=\"octicon octicon-mark-github\" fill=\"#24292E\" viewBox=\"0 0 16 16\" version=\"1.1\"><path fillRule=\"evenodd\" d=\"M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0 0 16 8c0-4.42-3.58-8-8-8z\"></path></svg>);\r\n\r\n// height=\"30\" className=\"octicon octicon-mark-github\" fill=\"#24292E\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"32\" aria-hidden=\"true\">","import React from 'react';\r\nimport GitHubSvg from '../github_svg';\r\nimport { Link } from 'react-router-dom';\r\nimport { AppRoute } from './../../common/constants';\r\n\r\nexport default () => (\r\n  <nav className='navbar'>\r\n    <a href=\"https://github.com/abdulmoizhussain\" title=\"Abdul Moiz's Github Repositories\">\r\n      <GitHubSvg />\r\n    </a>\r\n\r\n    <Link to={AppRoute.HomePage} title=\"Home Page\" className='ml-auto'>\r\n      <b>Home</b>\r\n    </Link>\r\n  </nav >\r\n);\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route, Redirect } from \"react-router-dom\";\r\nimport { AppRoute } from './../common/constants';\r\nimport HomePage from './../screens/home_page';\r\nimport RgbToHex from './../screens/rgb_to_hex';\r\nimport RenderMarkdown from './../screens/render_markdown';\r\nimport Counter from './../screens/counter';\r\nimport Percentage from \"../screens/Percentage\";\r\nimport Header from '../components/header';\r\n\r\nexport default function () {\r\n  return (\r\n    <Router>\r\n      <>\r\n        <Header />\r\n        {/* A <Switch> looks through its children <Route>s and */}\r\n        {/* renders the first one that matches the current URL. */}\r\n        <Switch>\r\n          <Route exact path={AppRoute.HomePage}><HomePage /></Route>\r\n          <Route path={AppRoute.RgbToHex}><RgbToHex /></Route>\r\n          <Route path={AppRoute.RenderMarkdown}><RenderMarkdown /></Route>\r\n          <Route path={AppRoute.Counter}><Counter /></Route>\r\n          <Route path={AppRoute.Percentage}><Percentage /></Route>\r\n          <Redirect from='*' to={AppRoute.HomePage} />\r\n        </Switch>\r\n      </>\r\n    </Router>\r\n  );\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Router from './router';\r\nimport * as serviceWorker from './service-worker';\r\n\r\nimport './index.css';\r\nimport \"./../node_modules/bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nReactDOM.render(<Router />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register({\r\n  onUpdate: (_: ServiceWorkerRegistration) => { },\r\n  onSuccess: (_: ServiceWorkerRegistration) => { },\r\n});\r\n"],"sourceRoot":""}